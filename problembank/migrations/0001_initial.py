# Generated by Django 3.2.3 on 2021-09-05 10:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان')),
                ('difficulty', models.CharField(choices=[('VeryEasy', 'Veryeasy'), ('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard'), ('VeryHard', 'Veryhard')], default='Medium', max_length=20, verbose_name='سختی')),
                ('suitable_for_over', models.IntegerField(choices=[('1', 'First'), ('2', 'Second'), ('3', 'Third'), ('4', 'Forth'), ('5', 'Fifth'), ('6', 'Sixth'), ('7', 'Seventh'), ('8', 'Eight'), ('9', 'Ninth'), ('10', 'Tenth'), ('11', 'Eleventh'), ('12', 'Twelfth')], default='1', verbose_name='پایین ترین پایه مناسب')),
                ('suitable_for_under', models.IntegerField(choices=[('1', 'First'), ('2', 'Second'), ('3', 'Third'), ('4', 'Forth'), ('5', 'Fifth'), ('6', 'Sixth'), ('7', 'Seventh'), ('8', 'Eight'), ('9', 'Ninth'), ('10', 'Tenth'), ('11', 'Eleventh'), ('12', 'Twelfth')], default='12', verbose_name='بالاترین پایه مناسب')),
                ('upvoteCount', models.IntegerField(default=0, verbose_name='تعداد آرای مثبت')),
                ('is_checked', models.BooleanField(default=False, verbose_name='آیا بررسی شده؟')),
            ],
        ),
        migrations.CreateModel(
            name='DescriptiveAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ShortAnswer', 'Shortanswer'), ('Descriptive', 'Descriptive'), ('MultiChoice', 'Multichoice')], default='Descriptive', max_length=20, verbose_name='نوع')),
                ('text', models.TextField(verbose_name='متن')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiChoiceAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ShortAnswer', 'Shortanswer'), ('Descriptive', 'Descriptive'), ('MultiChoice', 'Multichoice')], default='Descriptive', max_length=20, verbose_name='نوع')),
                ('text', models.IntegerField(verbose_name='شماره گزینه')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ShortAnswer', 'Shortanswer'), ('Descriptive', 'Descriptive'), ('MultiChoice', 'Multichoice')], default='Descriptive', max_length=20, verbose_name='نوع')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان')),
                ('text', models.TextField(verbose_name='متن')),
                ('publish_date', models.DateTimeField(blank=True, null=True, verbose_name='زمان انتشار')),
                ('last_change_date', models.DateTimeField(blank=True, null=True, verbose_name='زمان آخرین تغییر')),
                ('priority', models.IntegerField(blank=True, default=1, null=True, verbose_name='اولویت')),
                ('is_private', models.BooleanField(default=True, verbose_name='آیا خصوصی است؟')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem', to=settings.AUTH_USER_MODEL, verbose_name='نویسنده')),
                ('base_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem', to='problembank.baseproblem', verbose_name='مسئله')),
            ],
        ),
        migrations.CreateModel(
            name='ShortAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ShortAnswer', 'Shortanswer'), ('Descriptive', 'Descriptive'), ('MultiChoice', 'Multichoice')], default='Descriptive', max_length=20, verbose_name='نوع')),
                ('text', models.TextField(verbose_name='متن')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='عنوان')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='عنوان')),
            ],
        ),
        migrations.CreateModel(
            name='UploadFileAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ShortAnswer', 'Shortanswer'), ('Descriptive', 'Descriptive'), ('MultiChoice', 'Multichoice')], default='Descriptive', max_length=20, verbose_name='نوع')),
                ('answer_file', models.FileField(max_length=4000, upload_to='AnswerFile')),
                ('file_name', models.CharField(max_length=50, verbose_name='نام فایل')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='عنوان')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='problembank.topic', verbose_name='موضوع')),
            ],
        ),
        migrations.CreateModel(
            name='ShortAnswerSubmit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ دریافت مسئله')),
                ('status', models.CharField(choices=[('Received', 'Received'), ('Delivered', 'Delivered'), ('Judged', 'Judged')], default='Received', max_length=20, verbose_name='وضعیت تصحیح')),
                ('delivered_at', models.DateTimeField(null=True, verbose_name='تاریخ دریافت پاسخ')),
                ('judged_at', models.DateTimeField(null=True, verbose_name='تاریخ تصحیح')),
                ('mark', models.IntegerField(default=0, verbose_name='نمره')),
                ('answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submit_answer', to='problembank.shortanswer', verbose_name='پاسخ')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shortanswersubmit', to=settings.AUTH_USER_MODEL, verbose_name='نویسنده')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shortanswersubmit', to='problembank.problem', verbose_name='مسئله')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان')),
                ('mentors', models.ManyToManyField(blank=True, related_name='editable_categories', to=settings.AUTH_USER_MODEL, verbose_name='همیار(ها)')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_categories', to=settings.AUTH_USER_MODEL, verbose_name='صاحب')),
                ('problems', models.ManyToManyField(blank=True, related_name='categories', to='problembank.Problem', verbose_name='مسئله(ها)')),
                ('viewers', models.ManyToManyField(blank=True, related_name='observable_categories', to=settings.AUTH_USER_MODEL, verbose_name='بیننده(ها)')),
            ],
        ),
        migrations.CreateModel(
            name='JudgeableSubmit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ دریافت مسئله')),
                ('status', models.CharField(choices=[('Received', 'Received'), ('Delivered', 'Delivered'), ('Judged', 'Judged')], default='Received', max_length=20, verbose_name='وضعیت تصحیح')),
                ('delivered_at', models.DateTimeField(null=True, verbose_name='تاریخ دریافت پاسخ')),
                ('judged_at', models.DateTimeField(null=True, verbose_name='تاریخ تصحیح')),
                ('mark', models.IntegerField(default=0, verbose_name='نمره')),
                ('judge_note', models.CharField(blank=True, max_length=200, null=True, verbose_name='نظر مصحح')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='judgeablesubmit', to=settings.AUTH_USER_MODEL, verbose_name='نویسنده')),
                ('judged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='judged_problems', to=settings.AUTH_USER_MODEL, verbose_name='مصحح')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='judgeablesubmit', to='problembank.problem', verbose_name='مسئله')),
                ('text_answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submit_answer', to='problembank.descriptiveanswer', verbose_name='پاسخ متنی')),
                ('upload_file_answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submit_answer', to='problembank.uploadfileanswer', verbose_name='پاسخ آپلودی')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Guidance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='متن')),
                ('priority', models.IntegerField(blank=True, default=1, null=True, verbose_name='اولویت')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guidances', to='problembank.problem', verbose_name='مسئله')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='متن')),
                ('publish_date', models.DateTimeField(blank=True, null=True, verbose_name='زمان انتشار')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='نویسنده')),
                ('base_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='problembank.baseproblem', verbose_name='مسئله')),
            ],
        ),
        migrations.AddField(
            model_name='baseproblem',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problems', to='problembank.source', verbose_name='منبع'),
        ),
        migrations.AddField(
            model_name='baseproblem',
            name='subtopics',
            field=models.ManyToManyField(blank=True, related_name='problems', to='problembank.Subtopic', verbose_name='زیر موضوع(ها)'),
        ),
        migrations.AddField(
            model_name='baseproblem',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='problems', to='problembank.Topic', verbose_name='موضوع(ها)'),
        ),
        migrations.CreateModel(
            name='ShortAnswerProblem',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problembank.problem')),
                ('answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problem', to='problembank.shortanswer', verbose_name='پاسخ صحیح')),
            ],
            bases=('problembank.problem',),
        ),
        migrations.CreateModel(
            name='MultiChoiceProblem',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problembank.problem')),
                ('answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problem', to='problembank.multichoiceanswer', verbose_name='پاسخ صحیح')),
            ],
            bases=('problembank.problem',),
        ),
        migrations.CreateModel(
            name='DescriptiveProblem',
            fields=[
                ('problem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problembank.problem')),
                ('answer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problem', to='problembank.descriptiveanswer', verbose_name='پاسخ صحیح')),
            ],
            bases=('problembank.problem',),
        ),
    ]
